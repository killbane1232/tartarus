from services.dnd_service import generate_character, generate_dungeon, process_player_action
from database.db_manager import save_state, load_state

def get_room_description(state):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–æ–º–Ω–∞—Ç—ã"""
    current_room = state.dungeon.rooms[state.player.location]
    description = f"üìç {current_room.description}\n\n"
    
    if current_room.items:
        description += f"üì¶ –ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(current_room.items)}\n"
    
    if current_room.enemies:
        description += f"‚öîÔ∏è –í—Ä–∞–≥–∏: {', '.join(current_room.enemies)}\n"
    
    if current_room.friendly_npcs:
        description += f"üë• –î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ NPC: {', '.join(current_room.friendly_npcs)}\n"
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ –∏ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã—Ö–æ–¥—ã
    visible_exits = []
    for exit_name, exit_info in current_room.exits.items():
        if not exit_info.is_hidden and not exit_info.is_blocked:
            visible_exits.append(exit_info.name)
    
    if visible_exits:
        description += f"üö™ –í—ã—Ö–æ–¥—ã: {', '.join(visible_exits)}\n"
    
    return description

def get_player_status(state):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–∫–∞"""
    return f"üë§ {state.player.name} ({state.player.race} {state.player.cls})\n‚ù§Ô∏è HP: {state.player.hp}\nüéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {', '.join(state.player.inventory)}"

def get_adventure_info(state):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏"""
    info = ""
    if state.adventure_description:
        info += f"üìñ {state.adventure_description}\n\n"
    if state.story_context:
        info += f"üé≠ {state.story_context}\n\n"
    return info

def handle_start_command(chat_id: int, telegram_client) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    return "üé≤ –ü—Ä–∏–≤–µ—Ç! –Ø DnD –±–æ—Ç.\n\n–ö–æ–º–∞–Ω–¥—ã:\n/new [–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è] ‚Äî –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É\n/character [–∏–º—è] ‚Äî —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n/status ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å\n/story ‚Äî –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è\n\n–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ!"

def handle_new_game_command(chat_id: int, adventure_prompt: str, telegram_client) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new"""
    dungeon = generate_dungeon(adventure_prompt)
    if dungeon:
        save_state(chat_id, dungeon)
        adventure_info = get_adventure_info(dungeon)
        status = get_player_status(dungeon)
        room_desc = get_room_description(dungeon)
        return f"üéÆ –ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞!\n\n{adventure_info}{status}\n\n{room_desc}"
    else:
        return "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–∑–µ–º–µ–ª—å—è."

def handle_character_command(chat_id: int, text: str, telegram_client) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /character"""
    parts = text.split(maxsplit=1)
    name = parts[1] if len(parts) > 1 else "–ì–µ—Ä–æ–π"
    char = generate_character(chat_id, name)
    state = load_state(chat_id)
    if state:
        state.player = char
        save_state(chat_id, state)
        adventure_info = get_adventure_info(state)
        status = get_player_status(state)
        room_desc = get_room_description(state)
        return f"‚ú® –ü–µ—Ä—Å–æ–Ω–∞–∂ {char.name} —Å–æ–∑–¥–∞–Ω!\n\n{adventure_info}{status}\n\n{room_desc}"
    else:
        return "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É: /new"

def handle_status_command(chat_id: int, telegram_client) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
    state = load_state(chat_id)
    if state:
        adventure_info = get_adventure_info(state)
        status = get_player_status(state)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        if state.is_adventure_completed:
            if state.player.hp <= 0:
                completion_status = "üíÄ –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê - –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–≥–∏–±"
            else:
                completion_status = "üèÜ –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û - –ü–æ–±–µ–¥–∞!"
            
            return f"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:\n\n{adventure_info}{status}\n\n{completion_status}\n\nüéÆ –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /new [–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è]"
        else:
            room_desc = get_room_description(state)
            return f"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:\n\n{adventure_info}{status}\n\n{room_desc}"
    else:
        return "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É: /new"

def handle_story_command(chat_id: int, telegram_client) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /story"""
    state = load_state(chat_id)
    if state:
        story = "üìö –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è:\n\n"
        
        if state.adventure_description:
            story += f"üéØ –¶–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è:\n{state.adventure_description}\n\n"
        
        if state.story_context:
            story += f"üé≠ –¢–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç:\n{state.story_context}\n\n"
        
        if state.last_action_description:
            story += f"üìù –ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n{state.last_action_description}\n\n"
        
        story += f"üìç –¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {state.player.location}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        if state.is_adventure_completed:
            if state.player.hp <= 0:
                story += "\n\nüíÄ –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê - –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–≥–∏–±"
            else:
                story += "\n\nüèÜ –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û - –ü–æ–±–µ–¥–∞!"
            
            story += "\n\nüéÆ –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /new [–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è]"
        
        return story
    else:
        return "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É: /new"

def handle_player_action(chat_id: int, text: str, telegram_client) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫–∞"""
    state = load_state(chat_id)
    if not state:
        return "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É: /new"

    updated_state = process_player_action(state, text)
    if updated_state:
        save_state(chat_id, updated_state)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = f"üéØ –î–µ–π—Å—Ç–≤–∏–µ: {text}\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        if updated_state.last_action_description:
            response += f"üìù {updated_state.last_action_description}\n\n"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
        if updated_state.is_adventure_completed:
            if updated_state.player.hp <= 0:
                response += "üíÄ –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê! –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–≥–∏–±.\n\n"
            else:
                response += "üèÜ –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–±–µ–¥–æ–π!\n\n"
            
            response += "üéÆ –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /new [–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è]"
            return response
        
        response += get_player_status(updated_state) + "\n\n"
        response += get_room_description(updated_state)
        
        return response
    else:
        return "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è."

def process_message(update: dict, telegram_client) -> str:
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    message = update.get("message", {})
    chat_id = message.get("chat", {}).get("id")
    text = message.get("text", "")
    
    if not chat_id or not text:
        return ""
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if text.startswith("/start"):
        return handle_start_command(chat_id, telegram_client)
    elif text.startswith("/new"):
        if len(text) < 5 or text[5:].strip() == "":
            return handle_new_game_command(chat_id, None, telegram_client)
        else:
            return handle_new_game_command(chat_id, text[5:].strip(), telegram_client)
    elif text.startswith("/character"):
        return handle_character_command(chat_id, text, telegram_client)
    elif text.startswith("/status"):
        return handle_status_command(chat_id, telegram_client)
    elif text.startswith("/story"):
        return handle_story_command(chat_id, telegram_client)
    else:
        return handle_player_action(chat_id, text, telegram_client) 